org: luisignaciocc
app: portal-uno-aws-scrapper
service: portal-uno-aws-scrapper

stages:
  default:
    params:
      tableName: "cotization-table-${sls:stage}"

provider:
  name: aws
  runtime: nodejs18.x
  architecture: x86_64
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [CotizationTable, Arn]
  environment:
    COTIZATION_TABLE: ${param:tableName}

package:
  exclude:
    - node_modules/@aws-sdk/**
    - .git/**
    - README.md
    - package-lock.json

functions:
  api:
    handler: handler.handler
    memorySize: 128
    events:
      - httpApi: "*"
  scraper:
    handler: scraper.scraper
    memorySize: 640
    timeout: 60
    layers:
      - arn:aws:lambda:us-east-1:764866452798:layer:chrome-aws-lambda:45
    events:
      - schedule:
          rate: cron(0 0 1 * ? *)
          description: "Runs every week"
    environment:
      USERNAME_SCRAPER: ${env:USERNAME_SCRAPER}
      PASSWORD_SCRAPER: ${env:PASSWORD_SCRAPER}

resources:
  Resources:
    CotizationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: registration_date
            AttributeType: S
        KeySchema:
          - AttributeName: registration_date
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        TableName: ${param:tableName}
